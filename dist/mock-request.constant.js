// Generated by CoffeeScript 1.10.0
(function() {
  var createMockConstant;

  createMockConstant = function() {
    var JSON_TYPE, TEXT_TYPE, download, getFileName, outputSaved, toArray;
    JSON_TYPE = 'text/json;charset=utf-8';
    TEXT_TYPE = 'text;charset=utf-8';
    toArray = function(arrLike) {
      return Array.prototype.slice.call(arrLike);
    };
    getFileName = function(s) {
      return s.replace(/[^a-z0-9]/gi, '_').toLowerCase() + '.json';
    };
    outputSaved = function(id, isMocked, assetLoc, isSilet) {
      var color, msg, ref;
      ref = isMocked === true ? ["Mocked", "green"] : ["Not mocked", "red"], msg = ref[0], color = ref[1];
      if (!isSilet) {
        return console.log("%c" + msg + " " + id + ": " + assetLoc + "stub/" + id, "color: " + color + ";");
      }
    };
    download = function(type, data, id, stringify) {
      var URL, a, blob, downloadUrl, fileName;
      if (type == null) {
        type = JSON_TYPE;
      }
      if (stringify == null) {
        stringify = true;
      }
      fileName = getFileName(id);
      if (!!stringify) {
        data = JSON.stringify(data);
      }
      blob = new Blob([data], {
        type: type
      });
      URL = window.URL || window.webkitURL;
      downloadUrl = URL.createObjectURL(blob);
      a = document.createElement('a');
      a.href = downloadUrl;
      a.download = fileName;
      document.body.appendChild(a);
      return a.click();
    };
    return {
      JSON_TYPE: JSON_TYPE,
      TEXT_TYPE: TEXT_TYPE,
      toArray: toArray,
      getFileName: getFileName,
      outputSaved: outputSaved,
      download: download
    };
  };

  angular.module('ng-mock-request').constant('mockRequestConstant', createMockConstant());

}).call(this);
